{"Headers":{"Last-Modified":"Wed, 17 Apr 2024 12:52:18 GMT","X-Content-Type-Options":"nosniff"},"Body":"LyohIENvcHlyaWdodCAoYykgMjAxMCBCcmFuZG9uIEFhcm9uIChodHRwOi8vYnJhbmRvbmFhcm9uLm5ldCkKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIChNSVRfTElDRU5TRS50eHQpCiAqIGFuZCBHUEwgVmVyc2lvbiAyIChHUExfTElDRU5TRS50eHQpIGxpY2Vuc2VzLgogKgogKiBWZXJzaW9uOiAxLjEuMQogKiBSZXF1aXJlcyBqUXVlcnkgMS4zKwogKiBEb2NzOiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1BsdWdpbnMvbGl2ZXF1ZXJ5CiAqLwoKKGZ1bmN0aW9uKCQpIHsKCiQuZXh0ZW5kKCQuZm4sIHsKCWxpdmVxdWVyeTogZnVuY3Rpb24odHlwZSwgZm4sIGZuMikgewoJCXZhciBzZWxmID0gdGhpcywgcTsKCgkJLy8gSGFuZGxlIGRpZmZlcmVudCBjYWxsIHBhdHRlcm5zCgkJaWYgKCQuaXNGdW5jdGlvbih0eXBlKSkKCQkJZm4yID0gZm4sIGZuID0gdHlwZSwgdHlwZSA9IHVuZGVmaW5lZDsKCgkJLy8gU2VlIGlmIExpdmUgUXVlcnkgYWxyZWFkeSBleGlzdHMKCQkkLmVhY2goICQubGl2ZXF1ZXJ5LnF1ZXJpZXMsIGZ1bmN0aW9uKGksIHF1ZXJ5KSB7CgkJCWlmICggc2VsZi5zZWxlY3RvciA9PSBxdWVyeS5zZWxlY3RvciAmJiBzZWxmLmNvbnRleHQgPT0gcXVlcnkuY29udGV4dCAmJgoJCQkJdHlwZSA9PSBxdWVyeS50eXBlICYmICghZm4gfHwgZm4uJGxxZ3VpZCA9PSBxdWVyeS5mbi4kbHFndWlkKSAmJiAoIWZuMiB8fCBmbjIuJGxxZ3VpZCA9PSBxdWVyeS5mbjIuJGxxZ3VpZCkgKQoJCQkJCS8vIEZvdW5kIHRoZSBxdWVyeSwgZXhpdCB0aGUgZWFjaCBsb29wCgkJCQkJcmV0dXJuIChxID0gcXVlcnkpICYmIGZhbHNlOwoJCX0pOwoKCQkvLyBDcmVhdGUgbmV3IExpdmUgUXVlcnkgaWYgaXQgd2Fzbid0IGZvdW5kCgkJcSA9IHEgfHwgbmV3ICQubGl2ZXF1ZXJ5KHRoaXMuc2VsZWN0b3IsIHRoaXMuY29udGV4dCwgdHlwZSwgZm4sIGZuMik7CgoJCS8vIE1ha2Ugc3VyZSBpdCBpcyBydW5uaW5nCgkJcS5zdG9wcGVkID0gZmFsc2U7CgoJCS8vIFJ1biBpdCBpbW1lZGlhdGVseSBmb3IgdGhlIGZpcnN0IHRpbWUKCQlxLnJ1bigpOwoKCQkvLyBDb250bnVlIHRoZSBjaGFpbgoJCXJldHVybiB0aGlzOwoJfSwKCglleHBpcmU6IGZ1bmN0aW9uKHR5cGUsIGZuLCBmbjIpIHsKCQl2YXIgc2VsZiA9IHRoaXM7CgoJCS8vIEhhbmRsZSBkaWZmZXJlbnQgY2FsbCBwYXR0ZXJucwoJCWlmICgkLmlzRnVuY3Rpb24odHlwZSkpCgkJCWZuMiA9IGZuLCBmbiA9IHR5cGUsIHR5cGUgPSB1bmRlZmluZWQ7CgoJCS8vIEZpbmQgdGhlIExpdmUgUXVlcnkgYmFzZWQgb24gYXJndW1lbnRzIGFuZCBzdG9wIGl0CgkJJC5lYWNoKCAkLmxpdmVxdWVyeS5xdWVyaWVzLCBmdW5jdGlvbihpLCBxdWVyeSkgewoJCQlpZiAoIHNlbGYuc2VsZWN0b3IgPT0gcXVlcnkuc2VsZWN0b3IgJiYgc2VsZi5jb250ZXh0ID09IHF1ZXJ5LmNvbnRleHQgJiYKCQkJCSghdHlwZSB8fCB0eXBlID09IHF1ZXJ5LnR5cGUpICYmICghZm4gfHwgZm4uJGxxZ3VpZCA9PSBxdWVyeS5mbi4kbHFndWlkKSAmJiAoIWZuMiB8fCBmbjIuJGxxZ3VpZCA9PSBxdWVyeS5mbjIuJGxxZ3VpZCkgJiYgIXRoaXMuc3RvcHBlZCApCgkJCQkJJC5saXZlcXVlcnkuc3RvcChxdWVyeS5pZCk7CgkJfSk7CgoJCS8vIENvbnRpbnVlIHRoZSBjaGFpbgoJCXJldHVybiB0aGlzOwoJfQp9KTsKCiQubGl2ZXF1ZXJ5ID0gZnVuY3Rpb24oc2VsZWN0b3IsIGNvbnRleHQsIHR5cGUsIGZuLCBmbjIpIHsKCXRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjsKCXRoaXMuY29udGV4dCAgPSBjb250ZXh0OwoJdGhpcy50eXBlICAgICA9IHR5cGU7Cgl0aGlzLmZuICAgICAgID0gZm47Cgl0aGlzLmZuMiAgICAgID0gZm4yOwoJdGhpcy5lbGVtZW50cyA9IFtdOwoJdGhpcy5zdG9wcGVkICA9IGZhbHNlOwoKCS8vIFRoZSBpZCBpcyB0aGUgaW5kZXggb2YgdGhlIExpdmUgUXVlcnkgaW4gJC5saXZlcXVlcnkucXVlcmllcwoJdGhpcy5pZCA9ICQubGl2ZXF1ZXJ5LnF1ZXJpZXMucHVzaCh0aGlzKS0xOwoKCS8vIE1hcmsgdGhlIGZ1bmN0aW9ucyBmb3IgbWF0Y2hpbmcgbGF0ZXIgb24KCWZuLiRscWd1aWQgPSBmbi4kbHFndWlkIHx8ICQubGl2ZXF1ZXJ5Lmd1aWQrKzsKCWlmIChmbjIpIGZuMi4kbHFndWlkID0gZm4yLiRscWd1aWQgfHwgJC5saXZlcXVlcnkuZ3VpZCsrOwoKCS8vIFJldHVybiB0aGUgTGl2ZSBRdWVyeQoJcmV0dXJuIHRoaXM7Cn07CgokLmxpdmVxdWVyeS5wcm90b3R5cGUgPSB7CglzdG9wOiBmdW5jdGlvbigpIHsKCQl2YXIgcXVlcnkgPSB0aGlzOwoKCQlpZiAoIHRoaXMudHlwZSApCgkJCS8vIFVuYmluZCBhbGwgYm91bmQgZXZlbnRzCgkJCXRoaXMuZWxlbWVudHMudW5iaW5kKHRoaXMudHlwZSwgdGhpcy5mbik7CgkJZWxzZSBpZiAodGhpcy5mbjIpCgkJCS8vIENhbGwgdGhlIHNlY29uZCBmdW5jdGlvbiBmb3IgYWxsIG1hdGNoZWQgZWxlbWVudHMKCQkJdGhpcy5lbGVtZW50cy5lYWNoKGZ1bmN0aW9uKGksIGVsKSB7CgkJCQlxdWVyeS5mbjIuYXBwbHkoZWwpOwoJCQl9KTsKCgkJLy8gQ2xlYXIgb3V0IG1hdGNoZWQgZWxlbWVudHMKCQl0aGlzLmVsZW1lbnRzID0gW107CgoJCS8vIFN0b3AgdGhlIExpdmUgUXVlcnkgZnJvbSBydW5uaW5nIHVudGlsIHJlc3RhcnRlZAoJCXRoaXMuc3RvcHBlZCA9IHRydWU7Cgl9LAoKCXJ1bjogZnVuY3Rpb24oKSB7CgkJLy8gU2hvcnQtY2lyY3VpdCBpZiBzdG9wcGVkCgkJaWYgKCB0aGlzLnN0b3BwZWQgKSByZXR1cm47CgkJdmFyIHF1ZXJ5ID0gdGhpczsKCgkJdmFyIG9FbHMgPSB0aGlzLmVsZW1lbnRzLAoJCQllbHMgID0gJCh0aGlzLnNlbGVjdG9yLCB0aGlzLmNvbnRleHQpLAoJCQluRWxzID0gZWxzLm5vdChvRWxzKTsKCgkJLy8gU2V0IGVsZW1lbnRzIHRvIHRoZSBsYXRlc3Qgc2V0IG9mIG1hdGNoZWQgZWxlbWVudHMKCQl0aGlzLmVsZW1lbnRzID0gZWxzOwoKCQlpZiAodGhpcy50eXBlKSB7CgkJCS8vIEJpbmQgZXZlbnRzIHRvIG5ld2x5IG1hdGNoZWQgZWxlbWVudHMKCQkJbkVscy5iaW5kKHRoaXMudHlwZSwgdGhpcy5mbik7CgoJCQkvLyBVbmJpbmQgZXZlbnRzIHRvIGVsZW1lbnRzIG5vIGxvbmdlciBtYXRjaGVkCgkJCWlmIChvRWxzLmxlbmd0aCA+IDApCgkJCQkkLmVhY2gob0VscywgZnVuY3Rpb24oaSwgZWwpIHsKCQkJCQlpZiAoICQuaW5BcnJheShlbCwgZWxzKSA8IDAgKQoJCQkJCQkkLmV2ZW50LnJlbW92ZShlbCwgcXVlcnkudHlwZSwgcXVlcnkuZm4pOwoJCQkJfSk7CgkJfQoJCWVsc2UgewoJCQkvLyBDYWxsIHRoZSBmaXJzdCBmdW5jdGlvbiBmb3IgbmV3bHkgbWF0Y2hlZCBlbGVtZW50cwoJCQluRWxzLmVhY2goZnVuY3Rpb24oKSB7CgkJCQlxdWVyeS5mbi5hcHBseSh0aGlzKTsKCQkJfSk7CgoJCQkvLyBDYWxsIHRoZSBzZWNvbmQgZnVuY3Rpb24gZm9yIGVsZW1lbnRzIG5vIGxvbmdlciBtYXRjaGVkCgkJCWlmICggdGhpcy5mbjIgJiYgb0Vscy5sZW5ndGggPiAwICkKCQkJCSQuZWFjaChvRWxzLCBmdW5jdGlvbihpLCBlbCkgewoJCQkJCWlmICggJC5pbkFycmF5KGVsLCBlbHMpIDwgMCApCgkJCQkJCXF1ZXJ5LmZuMi5hcHBseShlbCk7CgkJCQl9KTsKCQl9Cgl9Cn07CgokLmV4dGVuZCgkLmxpdmVxdWVyeSwgewoJZ3VpZDogMCwKCXF1ZXJpZXM6IFtdLAoJcXVldWU6IFtdLAoJcnVubmluZzogZmFsc2UsCgl0aW1lb3V0OiBudWxsLAoKCWNoZWNrUXVldWU6IGZ1bmN0aW9uKCkgewoJCWlmICggJC5saXZlcXVlcnkucnVubmluZyAmJiAkLmxpdmVxdWVyeS5xdWV1ZS5sZW5ndGggKSB7CgkJCXZhciBsZW5ndGggPSAkLmxpdmVxdWVyeS5xdWV1ZS5sZW5ndGg7CgkJCS8vIFJ1biBlYWNoIExpdmUgUXVlcnkgY3VycmVudGx5IGluIHRoZSBxdWV1ZQoJCQl3aGlsZSAoIGxlbmd0aC0tICkKCQkJCSQubGl2ZXF1ZXJ5LnF1ZXJpZXNbICQubGl2ZXF1ZXJ5LnF1ZXVlLnNoaWZ0KCkgXS5ydW4oKTsKCQl9Cgl9LAoKCXBhdXNlOiBmdW5jdGlvbigpIHsKCQkvLyBEb24ndCBydW4gYW55bW9yZSBMaXZlIFF1ZXJpZXMgdW50aWwgcmVzdGFydGVkCgkJJC5saXZlcXVlcnkucnVubmluZyA9IGZhbHNlOwoJfSwKCglwbGF5OiBmdW5jdGlvbigpIHsKCQkvLyBSZXN0YXJ0IExpdmUgUXVlcmllcwoJCSQubGl2ZXF1ZXJ5LnJ1bm5pbmcgPSB0cnVlOwoJCS8vIFJlcXVlc3QgYSBydW4gb2YgdGhlIExpdmUgUXVlcmllcwoJCSQubGl2ZXF1ZXJ5LnJ1bigpOwoJfSwKCglyZWdpc3RlclBsdWdpbjogZnVuY3Rpb24oKSB7CgkJJC5lYWNoKCBhcmd1bWVudHMsIGZ1bmN0aW9uKGksbikgewoJCQkvLyBTaG9ydC1jaXJjdWl0IGlmIHRoZSBtZXRob2QgZG9lc24ndCBleGlzdAoJCQlpZiAoISQuZm5bbl0pIHJldHVybjsKCgkJCS8vIFNhdmUgYSByZWZlcmVuY2UgdG8gdGhlIG9yaWdpbmFsIG1ldGhvZAoJCQl2YXIgb2xkID0gJC5mbltuXTsKCgkJCS8vIENyZWF0ZSBhIG5ldyBtZXRob2QKCQkJJC5mbltuXSA9IGZ1bmN0aW9uKCkgewoJCQkJLy8gQ2FsbCB0aGUgb3JpZ2luYWwgbWV0aG9kCgkJCQl2YXIgciA9IG9sZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwoKCQkJCS8vIFJlcXVlc3QgYSBydW4gb2YgdGhlIExpdmUgUXVlcmllcwoJCQkJJC5saXZlcXVlcnkucnVuKCk7CgoJCQkJLy8gUmV0dXJuIHRoZSBvcmlnaW5hbCBtZXRob2RzIHJlc3VsdAoJCQkJcmV0dXJuIHI7CgkJCX0KCQl9KTsKCX0sCgoJcnVuOiBmdW5jdGlvbihpZCkgewoJCWlmIChpZCAhPSB1bmRlZmluZWQpIHsKCQkJLy8gUHV0IHRoZSBwYXJ0aWN1bGFyIExpdmUgUXVlcnkgaW4gdGhlIHF1ZXVlIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdAoJCQlpZiAoICQuaW5BcnJheShpZCwgJC5saXZlcXVlcnkucXVldWUpIDwgMCApCgkJCQkkLmxpdmVxdWVyeS5xdWV1ZS5wdXNoKCBpZCApOwoJCX0KCQllbHNlCgkJCS8vIFB1dCBlYWNoIExpdmUgUXVlcnkgaW4gdGhlIHF1ZXVlIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdAoJCQkkLmVhY2goICQubGl2ZXF1ZXJ5LnF1ZXJpZXMsIGZ1bmN0aW9uKGlkKSB7CgkJCQlpZiAoICQuaW5BcnJheShpZCwgJC5saXZlcXVlcnkucXVldWUpIDwgMCApCgkJCQkJJC5saXZlcXVlcnkucXVldWUucHVzaCggaWQgKTsKCQkJfSk7CgoJCS8vIENsZWFyIHRpbWVvdXQgaWYgaXQgYWxyZWFkeSBleGlzdHMKCQlpZiAoJC5saXZlcXVlcnkudGltZW91dCkgY2xlYXJUaW1lb3V0KCQubGl2ZXF1ZXJ5LnRpbWVvdXQpOwoJCS8vIENyZWF0ZSBhIHRpbWVvdXQgdG8gY2hlY2sgdGhlIHF1ZXVlIGFuZCBhY3R1YWxseSBydW4gdGhlIExpdmUgUXVlcmllcwoJCSQubGl2ZXF1ZXJ5LnRpbWVvdXQgPSBzZXRUaW1lb3V0KCQubGl2ZXF1ZXJ5LmNoZWNrUXVldWUsIDIwKTsKCX0sCgoJc3RvcDogZnVuY3Rpb24oaWQpIHsKCQlpZiAoaWQgIT0gdW5kZWZpbmVkKQoJCQkvLyBTdG9wIGFyZSBwYXJ0aWN1bGFyIExpdmUgUXVlcnkKCQkJJC5saXZlcXVlcnkucXVlcmllc1sgaWQgXS5zdG9wKCk7CgkJZWxzZQoJCQkvLyBTdG9wIGFsbCBMaXZlIFF1ZXJpZXMKCQkJJC5lYWNoKCAkLmxpdmVxdWVyeS5xdWVyaWVzLCBmdW5jdGlvbihpZCkgewoJCQkJJC5saXZlcXVlcnkucXVlcmllc1sgaWQgXS5zdG9wKCk7CgkJCX0pOwoJfQp9KTsKCi8vIFJlZ2lzdGVyIGNvcmUgRE9NIG1hbmlwdWxhdGlvbiBtZXRob2RzCiQubGl2ZXF1ZXJ5LnJlZ2lzdGVyUGx1Z2luKCdhcHBlbmQnLCAncHJlcGVuZCcsICdhZnRlcicsICdiZWZvcmUnLCAnd3JhcCcsICdhdHRyJywgJ3JlbW92ZUF0dHInLCAnYWRkQ2xhc3MnLCAncmVtb3ZlQ2xhc3MnLCAndG9nZ2xlQ2xhc3MnLCAnZW1wdHknLCAncmVtb3ZlJywgJ2h0bWwnKTsKCi8vIFJ1biBMaXZlIFF1ZXJpZXMgd2hlbiB0aGUgRG9jdW1lbnQgaXMgcmVhZHkKJChmdW5jdGlvbigpIHsgJC5saXZlcXVlcnkucGxheSgpOyB9KTsKCn0pKGpRdWVyeSk7DQo=","CacheKey":"3TC1Jh-Q20Tv2h1RZkyG7FNnMX8"}